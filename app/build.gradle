plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

def settingsPropertiesFile = rootProject.file("settings.properties")
def settingsProperties = new Properties()
if (settingsPropertiesFile.exists()) {
    settingsProperties.load(new FileInputStream(settingsPropertiesFile))
} else {
    def defaultFile = rootProject.file("settings.example")
    settingsProperties.load(new FileInputStream(defaultFile))
}

android {
    namespace 'nomic.mobile'
    compileSdk 33

    defaultConfig {
        applicationId "nomic.mobile"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
        jniLibs {
            useLegacyPackaging = true
        }
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.all {
            jacoco.includeNoLocationClasses = true
        }
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            buildConfigField("String", "SERVER_ROOT_URI", settingsProperties['SERVER_ROOT_URI'])
            buildConfigField("String", "USER_TOKEN", settingsProperties['USER_TOKEN'])
        }
        create("staging") {
            initWith(getByName("debug"))
            testCoverageEnabled = true
            debuggable = true
            def defaultFile = rootProject.file("settings.example")
            settingsProperties.load(new FileInputStream(defaultFile))
            buildConfigField("String", "SERVER_ROOT_URI", settingsProperties['SERVER_ROOT_URI'])
            buildConfigField("String", "USER_TOKEN", settingsProperties['USER_TOKEN'])
        }
        testBuildType = "staging"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    afterEvaluate {
        tasks.withType(Test) {
            jacoco.excludes = ['jdk.internal.*']
        }
    }
}

dependencies {
    // ViewModel
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation "androidx.activity:activity-ktx:1.6.0"
    implementation "androidx.fragment:fragment-ktx:1.5.6"
    implementation 'androidx.databinding:databinding-runtime:7.1.2'
    implementation 'androidx.databinding:databinding-compiler:7.4.2'
    implementation 'androidx.activity:activity-ktx:1.6.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.6'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    androidTestImplementation 'io.mockk:mockk-android:1.13.5'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
